package com.andreyyurko.dnd.data.abilities.classes.bard

import com.andreyyurko.dnd.data.characterData.Action
import com.andreyyurko.dnd.data.characterData.ActionType
import com.andreyyurko.dnd.data.characterData.character.CharacterInfo
import com.andreyyurko.dnd.data.characterData.ChargesCounter
import com.andreyyurko.dnd.data.characterData.Classes
import com.andreyyurko.dnd.data.characterData.character.AbilityNode

var psychicBlades = AbilityNode(
    name = "Психические клинки",
    changesInCharacterInfo = { abilities: CharacterInfo ->
        var dice = "2к6"
        if (abilities.level >= 5) dice = "3к6"
        if (abilities.level >= 10) dice = "5к6"
        if (abilities.level >= 15) dice = "8к6"
        abilities.actionsMap["Психические клинки"] =
            Action(
                name = "Психические клинки",
                description = "Когда вы попадаете по существу атакой оружием, вы можете потратить одно «Вдохновение барда» и нанести цели дополнительные " + dice + " урона психической энергией. Вы можете использовать это умение один раз за раунд в свой ход.\n",
                type = ActionType.PartOfAction,
                relatedCharges = "Бардовское вдохновение"
            )

        abilities
    },
    getAlternatives = mutableMapOf(),
    requirements = { abilities: CharacterInfo ->
        abilities.level >= 3 && abilities.characterClass == Classes.Bard
    },
    description = "При вступлении в коллегию шёпотов вы получаете возможность сделать свою атаку оружием магически токсичной для разума существа. Когда вы попадаете по существу атакой оружием, вы можете потратить одно «Вдохновение барда» и нанести цели дополнительные 2к6 урона психической энергией. Вы можете использовать это умение один раз за раунд в свой ход.\n" +
            "\n" +
            "Урон психической энергией увеличивается, когда вы получаете определенный уровень в этом классе, увеличиваясь до 3к6 на 5-м уровне, 5к6 на 10-м уровне и 8к6 на 15-м уровне.\n" +
            "\n"
)

var wordsOfTerror = AbilityNode(
    name = "Слова ужаса",
    changesInCharacterInfo = { abilities: CharacterInfo ->
        if (!abilities.currentState.charges.contains("Слова ужаса")) {
            abilities.currentState.charges["Слова ужаса"] = ChargesCounter(
                current = 1,
                maximum = 1
            )
        }
        abilities.actionsMap["Слова ужаса"] =
            Action(
                name = "Слова ужаса",
                description = "Вы учитесь наполнять кажущиеся безобидными слова коварной магией, которая вызывает ужас. Если вы разговариваете с Гуманоидом наедине, в течение по крайней мере 1 минуты, то можете попытаться посеять семя паранойи в его разуме.\n" +
                        "\n" +
                        "В конце беседы цель должна преуспеть в спасброске Мудрости против вашей Сл спасброска от ваших заклинаний, иначе будет напугана вами или другим существом по вашему выбору. Цель напугана на 1 час таким образом, пока не будет атакована или не получит урон, или пока она не заметит, что её союзники атакованы или получили урон. Если цель преуспевает в спасброске, то она не замечает никаких признаков того, что вы пытались ее испугать.\n" +
                        "Использовав это умение, вы не можете использовать его повторно до окончания короткого или продолжительного отдыха.\n",
                type = ActionType.Long,
                relatedCharges = "Слова ужаса"
            )

        abilities
    },
    getAlternatives = mutableMapOf(),
    requirements = { abilities: CharacterInfo ->
        abilities.level >= 3 && abilities.characterClass == Classes.Bard
    },
    description = "Вы учитесь наполнять кажущиеся безобидными слова коварной магией, которая вызывает ужас. Если вы разговариваете с Гуманоидом наедине, в течение по крайней мере 1 минуты, то можете попытаться посеять семя паранойи в его разуме.\n" +
            "\n" +
            "В конце беседы цель должна преуспеть в спасброске Мудрости против вашей Сл спасброска от ваших заклинаний, иначе будет напугана вами или другим существом по вашему выбору. Цель напугана на 1 час таким образом, пока не будет атакована или не получит урон, или пока она не заметит, что её союзники атакованы или получили урон. Если цель преуспевает в спасброске, то она не замечает никаких признаков того, что вы пытались ее испугать.\n" +
            "Использовав это умение, вы не можете использовать его повторно до окончания короткого или продолжительного отдыха.\n"
)

var mantleOfWhispers = AbilityNode(
    name = "Мантия шёпотов",
    changesInCharacterInfo = { abilities: CharacterInfo ->
        if (!abilities.currentState.charges.contains("Мантия шёпотов")) {
            abilities.currentState.charges["Мантия шёпотов"] = ChargesCounter(
                current = 1,
                maximum = 1
            )
        }
        abilities.actionsMap["Мантия шёпотов (поймать тень)"] =
            Action(
                name = "Мантия шёпотов (поймать тень)",
                description = "Вы получаете возможность принимать личность Гуманоида. Когда Гуманоид умирает в пределах 30 футов от вас, вы можете реакцией магическим образом поймать его тень. Вы удерживаете эту тень, пока не используете её, или до окончания короткого или продолжительного отдыха.\nКогда вы ловите тень этим умением, вы не можете поймать другую тень, до окончания короткого или продолжительного отдыха.\n",
                type = ActionType.Reaction,
                relatedCharges = "Мантия шёпотов"
            )

        abilities.actionsMap["Мантия шёпотов (использовать тень)"] =
            Action(
                name = "Мантия шёпотов (использовать тень)",
                description = "Действием вы можете использовать тень. Когда вы это делаете, она исчезает, магически превращаясь в маскировку, которая появляется на вас. Теперь вы выглядите как этот мёртвый Гуманоид, но кажетесь живым и здоровым. Маскировка длится 1 час или пока вы не закончите её бонусным действием. Находясь под этой маскировкой, вы получаете доступ ко всей информации, которой это существо могло бы свободно поделиться со случайным знакомым. Эта информация включает в себя общие данные о его биографии и личной жизни, но не его секреты. Этой информации достаточно для того, чтобы вы смогли выдать себя за эту личность, используя его воспоминания. Другие существа могут обнаружить вашу истинную сущность, в состязании их Мудрости (Проницательность) против вашей Харизмы (Обман), при этом вы получаете бонус +5 к своей проверке.\n",
                type = ActionType.Action
            )
        abilities
    },
    getAlternatives = mutableMapOf(),
    requirements = { abilities: CharacterInfo ->
        abilities.level >= 6 && abilities.characterClass == Classes.Bard
    },
    description = "Вы получаете возможность принимать личность Гуманоида. Когда Гуманоид умирает в пределах 30 футов от вас, вы можете реакцией магическим образом поймать его тень. Вы удерживаете эту тень, пока не используете её, или до окончания короткого или продолжительного отдыха.\n" +
            "\n" +
            "Действием вы можете использовать тень. Когда вы это делаете, она исчезает, магически превращаясь в маскировку, которая появляется на вас. Теперь вы выглядите как этот мёртвый Гуманоид, но кажетесь живым и здоровым. Маскировка длится 1 час или пока вы не закончите её бонусным действием. Находясь под этой маскировкой, вы получаете доступ ко всей информации, которой это существо могло бы свободно поделиться со случайным знакомым. Эта информация включает в себя общие данные о его биографии и личной жизни, но не его секреты. Этой информации достаточно для того, чтобы вы смогли выдать себя за эту личность, используя его воспоминания. Другие существа могут обнаружить вашу истинную сущность, в состязании их Мудрости (Проницательность) против вашей Харизмы (Обман), при этом вы получаете бонус +5 к своей проверке.\n" +
            "\n" +
            "Когда вы ловите тень этим умением, вы не можете поймать другую тень, до окончания короткого или продолжительного отдыха.\n"
)

var shadowLore = AbilityNode(
    name = "Знание тени",
    changesInCharacterInfo = { abilities: CharacterInfo ->
        if (!abilities.currentState.charges.contains("Знание тени")) {
            abilities.currentState.charges["Знание тени"] = ChargesCounter(
                current = 1,
                maximum = 1
            )
        }
        abilities.actionsMap["Знание тени"] =
            Action(
                name = "Знание тени",
                description = "Вы получаете способность вплетать в свою речь тёмную магию и дергать за ниточки самых глубоких страхов существа.\n" +
                        "Действием, вы магическим образом нашёптываете фразу, которую слышит только одно существо по вашему выбору в пределах 30 футов от вас. Цель должна совершить спасбросок Мудрости против Сл спасброска от ваших заклинаний. Цель автоматически преуспевает в броске, если она не разговаривает с вами хотя бы на одном общем языке, или не может слышать вас. В случае успеха, ваш шёпот звучит как неразборчивое бормотание и не имеет никакого эффекта.\n" +
                        "\n" +
                        "Если цель проваливает спасбросок, то она попадает под ваше очарование на следующие 8 часов или пока вы или ваши союзники не атакуют ее, не причинят ей вред или не заставят сделать спасбросок. Цель интерпретирует шёпот как описание самого страшного её секрета. Хотя вы не узнаете этой тайны, цель убеждена в том, что вы знаете её.\n" +
                        "\n" +
                        "Очарованное таким образом существо подчиняется вашим командам из страха, что вы раскроете его тайну. Оно не будет рисковать своей жизнью ради вас или сражаться за вас, если уже не было склонно делать это. Оно оказывает вам услуги и одаривает вас, как если бы вы были её близким другом. Когда эффект заканчивается, существо не представляет, почему настолько вас боялось.\n" +
                        "Использовав это умение, вы не можете использовать его повторно до окончания короткого или продолжительного отдыха.\n",
                type = ActionType.Action,
                relatedCharges = "Знание тени"
            )

        abilities
    },
    getAlternatives = mutableMapOf(),
    requirements = { abilities: CharacterInfo ->
        abilities.level >= 14 && abilities.characterClass == Classes.Bard
    },
    description = "Вы получаете способность вплетать в свою речь тёмную магию и дергать за ниточки самых глубоких страхов существа.\n" +
            "Действием, вы магическим образом нашёптываете фразу, которую слышит только одно существо по вашему выбору в пределах 30 футов от вас. Цель должна совершить спасбросок Мудрости против Сл спасброска от ваших заклинаний. Цель автоматически преуспевает в броске, если она не разговаривает с вами хотя бы на одном общем языке, или не может слышать вас. В случае успеха, ваш шёпот звучит как неразборчивое бормотание и не имеет никакого эффекта.\n" +
            "\n" +
            "Если цель проваливает спасбросок, то она попадает под ваше очарование на следующие 8 часов или пока вы или ваши союзники не атакуют ее, не причинят ей вред или не заставят сделать спасбросок. Цель интерпретирует шёпот как описание самого страшного её секрета. Хотя вы не узнаете этой тайны, цель убеждена в том, что вы знаете её.\n" +
            "\n" +
            "Очарованное таким образом существо подчиняется вашим командам из страха, что вы раскроете его тайну. Оно не будет рисковать своей жизнью ради вас или сражаться за вас, если уже не было склонно делать это. Оно оказывает вам услуги и одаривает вас, как если бы вы были её близким другом. Когда эффект заканчивается, существо не представляет, почему настолько вас боялось.\n" +
            "Использовав это умение, вы не можете использовать его повторно до окончания короткого или продолжительного отдыха.\n"
)

var collegeOfWhispers = AbilityNode(
    name = "Коллегия шёпотов",
    changesInCharacterInfo = { abilities: CharacterInfo -> abilities },
    getAlternatives = mutableMapOf(
        Pair("first") { listOf(psychicBlades.name) },
        Pair("second") { listOf(wordsOfTerror.name) },
        Pair("third") { listOf(mantleOfWhispers.name) },
        Pair("fourth") { listOf(shadowLore.name) }
    ),
    requirements = { true },
    description = "",
    isNeedsToBeShown = false
)

var mapOfCollegeOfWhispersAbilities: MutableMap<String, AbilityNode> = mutableMapOf(
    Pair(psychicBlades.name, psychicBlades),
    Pair(wordsOfTerror.name, wordsOfTerror),
    Pair(mantleOfWhispers.name, mantleOfWhispers),
    Pair(shadowLore.name, shadowLore),
    Pair(collegeOfWhispers.name, collegeOfWhispers),
)